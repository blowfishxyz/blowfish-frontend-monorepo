/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LegacyAssetPrice
 */
export interface LegacyAssetPrice {
    /**
     * 
     * @type {string}
     * @memberof LegacyAssetPrice
     */
    source: LegacyAssetPriceSourceEnum;
    /**
     * 
     * @type {number}
     * @memberof LegacyAssetPrice
     */
    lastUpdatedAt: number;
    /**
     * 
     * @type {number}
     * @memberof LegacyAssetPrice
     */
    dollarValuePerToken: number;
}


/**
 * @export
 */
export const LegacyAssetPriceSourceEnum = {
    Simplehash: 'Simplehash',
    Defillama: 'Defillama',
    Coingecko: 'Coingecko'
} as const;
export type LegacyAssetPriceSourceEnum = typeof LegacyAssetPriceSourceEnum[keyof typeof LegacyAssetPriceSourceEnum];


/**
 * Check if a given object implements the LegacyAssetPrice interface.
 */
export function instanceOfLegacyAssetPrice(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "lastUpdatedAt" in value;
    isInstance = isInstance && "dollarValuePerToken" in value;

    return isInstance;
}

export function LegacyAssetPriceFromJSON(json: any): LegacyAssetPrice {
    return LegacyAssetPriceFromJSONTyped(json, false);
}

export function LegacyAssetPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): LegacyAssetPrice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': json['source'],
        'lastUpdatedAt': json['last_updated_at'],
        'dollarValuePerToken': json['dollar_value_per_token'],
    };
}

export function LegacyAssetPriceToJSON(value?: LegacyAssetPrice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': value.source,
        'last_updated_at': value.lastUpdatedAt,
        'dollar_value_per_token': value.dollarValuePerToken,
    };
}

