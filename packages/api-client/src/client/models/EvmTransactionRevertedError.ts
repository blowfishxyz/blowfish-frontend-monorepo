/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmTransactionRevertedError
 */
export interface EvmTransactionRevertedError {
    /**
     * 
     * @type {string}
     * @memberof EvmTransactionRevertedError
     */
    kind: EvmTransactionRevertedErrorKindEnum;
    /**
     * Human readable explanation of the error
     * @type {string}
     * @memberof EvmTransactionRevertedError
     */
    humanReadableError: string;
    /**
     * Why the transaction reverted
     * @type {string}
     * @memberof EvmTransactionRevertedError
     */
    revertReason: string;
}


/**
 * @export
 */
export const EvmTransactionRevertedErrorKindEnum = {
    TransactionReverted: 'TRANSACTION_REVERTED'
} as const;
export type EvmTransactionRevertedErrorKindEnum = typeof EvmTransactionRevertedErrorKindEnum[keyof typeof EvmTransactionRevertedErrorKindEnum];


/**
 * Check if a given object implements the EvmTransactionRevertedError interface.
 */
export function instanceOfEvmTransactionRevertedError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "humanReadableError" in value;
    isInstance = isInstance && "revertReason" in value;

    return isInstance;
}

export function EvmTransactionRevertedErrorFromJSON(json: any): EvmTransactionRevertedError {
    return EvmTransactionRevertedErrorFromJSONTyped(json, false);
}

export function EvmTransactionRevertedErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTransactionRevertedError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'humanReadableError': json['humanReadableError'],
        'revertReason': json['revertReason'],
    };
}

export function EvmTransactionRevertedErrorToJSON(value?: EvmTransactionRevertedError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'humanReadableError': value.humanReadableError,
        'revertReason': value.revertReason,
    };
}

