/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmStateChangeErc1155ApprovalForAllData } from './EvmStateChangeErc1155ApprovalForAllData';
import {
    EvmStateChangeErc1155ApprovalForAllDataFromJSON,
    EvmStateChangeErc1155ApprovalForAllDataFromJSONTyped,
    EvmStateChangeErc1155ApprovalForAllDataToJSON,
} from './EvmStateChangeErc1155ApprovalForAllData';

/**
 * Approval request for all owned ERC1155 assets
 * @export
 * @interface EvmStateChangeErc1155ApprovalForAll
 */
export interface EvmStateChangeErc1155ApprovalForAll {
    /**
     * What kind of state change this object is
     * @type {string}
     * @memberof EvmStateChangeErc1155ApprovalForAll
     */
    kind: EvmStateChangeErc1155ApprovalForAllKindEnum;
    /**
     * 
     * @type {EvmStateChangeErc1155ApprovalForAllData}
     * @memberof EvmStateChangeErc1155ApprovalForAll
     */
    data: EvmStateChangeErc1155ApprovalForAllData;
}


/**
 * @export
 */
export const EvmStateChangeErc1155ApprovalForAllKindEnum = {
    Erc1155ApprovalForAll: 'ERC1155_APPROVAL_FOR_ALL'
} as const;
export type EvmStateChangeErc1155ApprovalForAllKindEnum = typeof EvmStateChangeErc1155ApprovalForAllKindEnum[keyof typeof EvmStateChangeErc1155ApprovalForAllKindEnum];


/**
 * Check if a given object implements the EvmStateChangeErc1155ApprovalForAll interface.
 */
export function instanceOfEvmStateChangeErc1155ApprovalForAll(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function EvmStateChangeErc1155ApprovalForAllFromJSON(json: any): EvmStateChangeErc1155ApprovalForAll {
    return EvmStateChangeErc1155ApprovalForAllFromJSONTyped(json, false);
}

export function EvmStateChangeErc1155ApprovalForAllFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmStateChangeErc1155ApprovalForAll {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'data': EvmStateChangeErc1155ApprovalForAllDataFromJSON(json['data']),
    };
}

export function EvmStateChangeErc1155ApprovalForAllToJSON(value?: EvmStateChangeErc1155ApprovalForAll | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'data': EvmStateChangeErc1155ApprovalForAllDataToJSON(value.data),
    };
}

