/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetPrice
 */
export interface AssetPrice {
    /**
     * 
     * @type {string}
     * @memberof AssetPrice
     */
    source: AssetPriceSourceEnum;
    /**
     * 
     * @type {number}
     * @memberof AssetPrice
     */
    updatedAt: number;
    /**
     * 
     * @type {number}
     * @memberof AssetPrice
     */
    dollarValuePerToken: number;
}


/**
 * @export
 */
export const AssetPriceSourceEnum = {
    Simplehash: 'Simplehash',
    Defillama: 'Defillama',
    Coingecko: 'Coingecko'
} as const;
export type AssetPriceSourceEnum = typeof AssetPriceSourceEnum[keyof typeof AssetPriceSourceEnum];


/**
 * Check if a given object implements the AssetPrice interface.
 */
export function instanceOfAssetPrice(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "dollarValuePerToken" in value;

    return isInstance;
}

export function AssetPriceFromJSON(json: any): AssetPrice {
    return AssetPriceFromJSONTyped(json, false);
}

export function AssetPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetPrice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': json['source'],
        'updatedAt': json['updatedAt'] || json['last_updated_at'],
        'dollarValuePerToken': json['dollarValuePerToken'] || json['dollar_value_per_token'],
    };
}

export function AssetPriceToJSON(value?: AssetPrice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': value.source,
        'updatedAt': value.updatedAt,
        'dollarValuePerToken': value.dollarValuePerToken,
    };
}

