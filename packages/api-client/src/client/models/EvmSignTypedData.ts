/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmSignTypedDataData } from './EvmSignTypedDataData';
import {
    EvmSignTypedDataDataFromJSON,
    EvmSignTypedDataDataFromJSONTyped,
    EvmSignTypedDataDataToJSON,
} from './EvmSignTypedDataData';

/**
 * 
 * @export
 * @interface EvmSignTypedData
 */
export interface EvmSignTypedData {
    /**
     * 
     * @type {string}
     * @memberof EvmSignTypedData
     */
    kind?: EvmSignTypedDataKindEnum;
    /**
     * 
     * @type {EvmSignTypedDataData}
     * @memberof EvmSignTypedData
     */
    data?: EvmSignTypedDataData;
}


/**
 * @export
 */
export const EvmSignTypedDataKindEnum = {
    SignTypedData: 'SIGN_TYPED_DATA'
} as const;
export type EvmSignTypedDataKindEnum = typeof EvmSignTypedDataKindEnum[keyof typeof EvmSignTypedDataKindEnum];


/**
 * Check if a given object implements the EvmSignTypedData interface.
 */
export function instanceOfEvmSignTypedData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EvmSignTypedDataFromJSON(json: any): EvmSignTypedData {
    return EvmSignTypedDataFromJSONTyped(json, false);
}

export function EvmSignTypedDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmSignTypedData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'data': !exists(json, 'data') ? undefined : EvmSignTypedDataDataFromJSON(json['data']),
    };
}

export function EvmSignTypedDataToJSON(value?: EvmSignTypedData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'data': EvmSignTypedDataDataToJSON(value.data),
    };
}

