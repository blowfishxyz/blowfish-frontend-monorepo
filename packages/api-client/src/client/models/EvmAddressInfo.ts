/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmAddressInfo
 */
export interface EvmAddressInfo {
    /**
     * The blockchain address
     * @type {string}
     * @memberof EvmAddressInfo
     */
    address: string;
    /**
     * The type of address
     * @type {string}
     * @memberof EvmAddressInfo
     */
    kind: EvmAddressInfoKindEnum;
}


/**
 * @export
 */
export const EvmAddressInfoKindEnum = {
    Account: 'ACCOUNT'
} as const;
export type EvmAddressInfoKindEnum = typeof EvmAddressInfoKindEnum[keyof typeof EvmAddressInfoKindEnum];


/**
 * Check if a given object implements the EvmAddressInfo interface.
 */
export function instanceOfEvmAddressInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "kind" in value;

    return isInstance;
}

export function EvmAddressInfoFromJSON(json: any): EvmAddressInfo {
    return EvmAddressInfoFromJSONTyped(json, false);
}

export function EvmAddressInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmAddressInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'kind': json['kind'],
    };
}

export function EvmAddressInfoToJSON(value?: EvmAddressInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'kind': value.kind,
    };
}

