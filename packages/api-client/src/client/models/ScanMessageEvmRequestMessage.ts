/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EvmSignMessage,
    instanceOfEvmSignMessage,
    EvmSignMessageFromJSON,
    EvmSignMessageFromJSONTyped,
    EvmSignMessageToJSON,
} from './EvmSignMessage';
import {
    EvmSignTypedData,
    instanceOfEvmSignTypedData,
    EvmSignTypedDataFromJSON,
    EvmSignTypedDataFromJSONTyped,
    EvmSignTypedDataToJSON,
} from './EvmSignTypedData';

/**
 * @type ScanMessageEvmRequestMessage
 * An object containing the message type and contents
 * @export
 */
export type ScanMessageEvmRequestMessage = { kind: 'SIGN_MESSAGE' } & EvmSignMessage | { kind: 'SIGN_TYPED_DATA' } & EvmSignTypedData;

export function ScanMessageEvmRequestMessageFromJSON(json: any): ScanMessageEvmRequestMessage {
    return ScanMessageEvmRequestMessageFromJSONTyped(json, false);
}

export function ScanMessageEvmRequestMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanMessageEvmRequestMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['kind']) {
        case 'SIGN_MESSAGE':
            return {...EvmSignMessageFromJSONTyped(json, true), kind: 'SIGN_MESSAGE'};
        case 'SIGN_TYPED_DATA':
            return {...EvmSignTypedDataFromJSONTyped(json, true), kind: 'SIGN_TYPED_DATA'};
        default:
            throw new Error(`No variant of ScanMessageEvmRequestMessage exists with 'kind=${json['kind']}'`);
    }
}

export function ScanMessageEvmRequestMessageToJSON(value?: ScanMessageEvmRequestMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['kind']) {
        case 'SIGN_MESSAGE':
            return EvmSignMessageToJSON(value);
        case 'SIGN_TYPED_DATA':
            return EvmSignTypedDataToJSON(value);
        default:
            throw new Error(`No variant of ScanMessageEvmRequestMessage exists with 'kind=${value['kind']}'`);
    }

}

