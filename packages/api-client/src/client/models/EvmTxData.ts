/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmTxData
 */
export interface EvmTxData {
    /**
     * Hex-representation address of transaction signer
     * @type {string}
     * @memberof EvmTxData
     */
    from?: string;
    /**
     * Hex-representation address of transaction recipient
     * @type {string}
     * @memberof EvmTxData
     */
    to?: string;
    /**
     * Hex-representation of ABI encoded call data
     * @type {string}
     * @memberof EvmTxData
     */
    data?: string;
    /**
     * String representation of Ether/Matic (in Wei) to send with the transaction
     * @type {string}
     * @memberof EvmTxData
     */
    value?: string;
}

/**
 * Check if a given object implements the EvmTxData interface.
 */
export function instanceOfEvmTxData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EvmTxDataFromJSON(json: any): EvmTxData {
    return EvmTxDataFromJSONTyped(json, false);
}

export function EvmTxDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTxData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'from': !exists(json, 'from') ? undefined : json['from'],
        'to': !exists(json, 'to') ? undefined : json['to'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function EvmTxDataToJSON(value?: EvmTxData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'from': value.from,
        'to': value.to,
        'data': value.data,
        'value': value.value,
    };
}

