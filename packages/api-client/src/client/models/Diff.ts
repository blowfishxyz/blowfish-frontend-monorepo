/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Diff
 */
export interface Diff {
    /**
     * Whether the amount is positive or negative
     * @type {string}
     * @memberof Diff
     */
    sign: DiffSignEnum;
    /**
     * 
     * @type {number}
     * @memberof Diff
     */
    digits: number;
}


/**
 * @export
 */
export const DiffSignEnum = {
    Plus: 'PLUS',
    Minus: 'MINUS'
} as const;
export type DiffSignEnum = typeof DiffSignEnum[keyof typeof DiffSignEnum];


/**
 * Check if a given object implements the Diff interface.
 */
export function instanceOfDiff(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sign" in value;
    isInstance = isInstance && "digits" in value;

    return isInstance;
}

export function DiffFromJSON(json: any): Diff {
    return DiffFromJSONTyped(json, false);
}

export function DiffFromJSONTyped(json: any, ignoreDiscriminator: boolean): Diff {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sign': json['sign'],
        'digits': json['digits'],
    };
}

export function DiffToJSON(value?: Diff | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sign': value.sign,
        'digits': value.digits,
    };
}

