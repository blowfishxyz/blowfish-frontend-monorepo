/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScanTransactionsSolana200ResponseSimulationResultsError } from './ScanTransactionsSolana200ResponseSimulationResultsError';
import {
    ScanTransactionsSolana200ResponseSimulationResultsErrorFromJSON,
    ScanTransactionsSolana200ResponseSimulationResultsErrorFromJSONTyped,
    ScanTransactionsSolana200ResponseSimulationResultsErrorToJSON,
} from './ScanTransactionsSolana200ResponseSimulationResultsError';
import type { ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInner } from './ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInner';
import {
    ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInnerFromJSON,
    ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInnerFromJSONTyped,
    ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInnerToJSON,
} from './ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInner';
import type { ScanTransactionsSolana200ResponseSimulationResultsRaw } from './ScanTransactionsSolana200ResponseSimulationResultsRaw';
import {
    ScanTransactionsSolana200ResponseSimulationResultsRawFromJSON,
    ScanTransactionsSolana200ResponseSimulationResultsRawFromJSONTyped,
    ScanTransactionsSolana200ResponseSimulationResultsRawToJSON,
} from './ScanTransactionsSolana200ResponseSimulationResultsRaw';

/**
 * 
 * @export
 * @interface ScanTransactionsSolana200ResponseSimulationResults
 */
export interface ScanTransactionsSolana200ResponseSimulationResults {
    /**
     * Whether all of the transaction's recentBlockhashes have expired
     * @type {boolean}
     * @memberof ScanTransactionsSolana200ResponseSimulationResults
     */
    isRecentBlockhashExpired: boolean;
    /**
     * An array of state changes one could expect if these transactions were submitted on-chain. Each state change represents a meaningful change to the end-user's assets or permissions on-chain. We reserve the right to add new state change types, so any handling logic custom to state change types should fallback gracefully to showing the end-user the `humanReadableDiff` of any unrecognized state change types.
     * @type {Array<ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInner>}
     * @memberof ScanTransactionsSolana200ResponseSimulationResults
     */
    expectedStateChanges: Array<ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInner>;
    /**
     * 
     * @type {ScanTransactionsSolana200ResponseSimulationResultsError}
     * @memberof ScanTransactionsSolana200ResponseSimulationResults
     */
    error: ScanTransactionsSolana200ResponseSimulationResultsError | null;
    /**
     * 
     * @type {ScanTransactionsSolana200ResponseSimulationResultsRaw}
     * @memberof ScanTransactionsSolana200ResponseSimulationResults
     */
    raw: ScanTransactionsSolana200ResponseSimulationResultsRaw;
}

/**
 * Check if a given object implements the ScanTransactionsSolana200ResponseSimulationResults interface.
 */
export function instanceOfScanTransactionsSolana200ResponseSimulationResults(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isRecentBlockhashExpired" in value;
    isInstance = isInstance && "expectedStateChanges" in value;
    isInstance = isInstance && "error" in value;
    isInstance = isInstance && "raw" in value;

    return isInstance;
}

export function ScanTransactionsSolana200ResponseSimulationResultsFromJSON(json: any): ScanTransactionsSolana200ResponseSimulationResults {
    return ScanTransactionsSolana200ResponseSimulationResultsFromJSONTyped(json, false);
}

export function ScanTransactionsSolana200ResponseSimulationResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanTransactionsSolana200ResponseSimulationResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isRecentBlockhashExpired': json['isRecentBlockhashExpired'],
        'expectedStateChanges': ((json['expectedStateChanges'] as Array<any>).map(ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInnerFromJSON)),
        'error': ScanTransactionsSolana200ResponseSimulationResultsErrorFromJSON(json['error']),
        'raw': ScanTransactionsSolana200ResponseSimulationResultsRawFromJSON(json['raw']),
    };
}

export function ScanTransactionsSolana200ResponseSimulationResultsToJSON(value?: ScanTransactionsSolana200ResponseSimulationResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isRecentBlockhashExpired': value.isRecentBlockhashExpired,
        'expectedStateChanges': ((value.expectedStateChanges as Array<any>).map(ScanTransactionsSolana200ResponseSimulationResultsExpectedStateChangesInnerToJSON)),
        'error': ScanTransactionsSolana200ResponseSimulationResultsErrorToJSON(value.error),
        'raw': ScanTransactionsSolana200ResponseSimulationResultsRawToJSON(value.raw),
    };
}

