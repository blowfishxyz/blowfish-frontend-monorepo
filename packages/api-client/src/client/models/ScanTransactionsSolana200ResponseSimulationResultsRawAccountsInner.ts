/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOf } from './ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOf';
import {
    ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOfFromJSON,
    ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOfFromJSONTyped,
    ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOfToJSON,
} from './ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerAnyOf';

/**
 * 
 * @export
 * @interface ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
 */
export interface ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner {
    /**
     * 
     * @type {number}
     * @memberof ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
     */
    lamports: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
     */
    data: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
     */
    owner: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
     */
    executable: boolean;
    /**
     * 
     * @type {number}
     * @memberof ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner
     */
    rentEpoch: number;
}

/**
 * Check if a given object implements the ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner interface.
 */
export function instanceOfScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lamports" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "executable" in value;
    isInstance = isInstance && "rentEpoch" in value;

    return isInstance;
}

export function ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerFromJSON(json: any): ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner {
    return ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerFromJSONTyped(json, false);
}

export function ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lamports': json['lamports'],
        'data': json['data'],
        'owner': json['owner'],
        'executable': json['executable'],
        'rentEpoch': json['rentEpoch'],
    };
}

export function ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInnerToJSON(value?: ScanTransactionsSolana200ResponseSimulationResultsRawAccountsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lamports': value.lamports,
        'data': value.data,
        'owner': value.owner,
        'executable': value.executable,
        'rentEpoch': value.rentEpoch,
    };
}

