/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmStateChangeErc721ApprovalForAllData } from './EvmStateChangeErc721ApprovalForAllData';
import {
    EvmStateChangeErc721ApprovalForAllDataFromJSON,
    EvmStateChangeErc721ApprovalForAllDataFromJSONTyped,
    EvmStateChangeErc721ApprovalForAllDataToJSON,
} from './EvmStateChangeErc721ApprovalForAllData';

/**
 * Approval request for all owned ERC721 NFTs in a collection
 * @export
 * @interface EvmStateChangeErc721ApprovalForAll
 */
export interface EvmStateChangeErc721ApprovalForAll {
    /**
     * What kind of state change this object is
     * @type {string}
     * @memberof EvmStateChangeErc721ApprovalForAll
     */
    kind: EvmStateChangeErc721ApprovalForAllKindEnum;
    /**
     * 
     * @type {EvmStateChangeErc721ApprovalForAllData}
     * @memberof EvmStateChangeErc721ApprovalForAll
     */
    data: EvmStateChangeErc721ApprovalForAllData;
}


/**
 * @export
 */
export const EvmStateChangeErc721ApprovalForAllKindEnum = {
    Erc721ApprovalForAll: 'ERC721_APPROVAL_FOR_ALL'
} as const;
export type EvmStateChangeErc721ApprovalForAllKindEnum = typeof EvmStateChangeErc721ApprovalForAllKindEnum[keyof typeof EvmStateChangeErc721ApprovalForAllKindEnum];


/**
 * Check if a given object implements the EvmStateChangeErc721ApprovalForAll interface.
 */
export function instanceOfEvmStateChangeErc721ApprovalForAll(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function EvmStateChangeErc721ApprovalForAllFromJSON(json: any): EvmStateChangeErc721ApprovalForAll {
    return EvmStateChangeErc721ApprovalForAllFromJSONTyped(json, false);
}

export function EvmStateChangeErc721ApprovalForAllFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmStateChangeErc721ApprovalForAll {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'data': EvmStateChangeErc721ApprovalForAllDataFromJSON(json['data']),
    };
}

export function EvmStateChangeErc721ApprovalForAllToJSON(value?: EvmStateChangeErc721ApprovalForAll | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'data': EvmStateChangeErc721ApprovalForAllDataToJSON(value.data),
    };
}

