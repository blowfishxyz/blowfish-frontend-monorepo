/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssetPrice } from './AssetPrice';
import {
    AssetPriceFromJSON,
    AssetPriceFromJSONTyped,
    AssetPriceToJSON,
} from './AssetPrice';
import type { EvmAddressInfo } from './EvmAddressInfo';
import {
    EvmAddressInfoFromJSON,
    EvmAddressInfoFromJSONTyped,
    EvmAddressInfoToJSON,
} from './EvmAddressInfo';
import type { EvmAmount } from './EvmAmount';
import {
    EvmAmountFromJSON,
    EvmAmountFromJSONTyped,
    EvmAmountToJSON,
} from './EvmAmount';
import type { EvmNftMetadata } from './EvmNftMetadata';
import {
    EvmNftMetadataFromJSON,
    EvmNftMetadataFromJSONTyped,
    EvmNftMetadataToJSON,
} from './EvmNftMetadata';

/**
 * Data associated with the state change
 * @export
 * @interface EvmStateChangeErc1155TransferData
 */
export interface EvmStateChangeErc1155TransferData {
    /**
     * 
     * @type {EvmAmount}
     * @memberof EvmStateChangeErc1155TransferData
     */
    amount: EvmAmount;
    /**
     * 
     * @type {EvmAddressInfo}
     * @memberof EvmStateChangeErc1155TransferData
     */
    contract: EvmAddressInfo;
    /**
     * 
     * @type {EvmNftMetadata}
     * @memberof EvmStateChangeErc1155TransferData
     */
    metadata: EvmNftMetadata;
    /**
     * The ID of the ERC1155 token. Can be `null`.
     * @type {string}
     * @memberof EvmStateChangeErc1155TransferData
     */
    tokenId: string | null;
    /**
     * 
     * @type {AssetPrice}
     * @memberof EvmStateChangeErc1155TransferData
     */
    assetPrice: AssetPrice | null;
}

/**
 * Check if a given object implements the EvmStateChangeErc1155TransferData interface.
 */
export function instanceOfEvmStateChangeErc1155TransferData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "contract" in value;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "tokenId" in value;
    isInstance = isInstance && "assetPrice" in value;

    return isInstance;
}

export function EvmStateChangeErc1155TransferDataFromJSON(json: any): EvmStateChangeErc1155TransferData {
    return EvmStateChangeErc1155TransferDataFromJSONTyped(json, false);
}

export function EvmStateChangeErc1155TransferDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmStateChangeErc1155TransferData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': EvmAmountFromJSON(json['amount']),
        'contract': EvmAddressInfoFromJSON(json['contract']),
        'metadata': EvmNftMetadataFromJSON(json['metadata']),
        'tokenId': json['tokenId'],
        'assetPrice': AssetPriceFromJSON(json['assetPrice']),
    };
}

export function EvmStateChangeErc1155TransferDataToJSON(value?: EvmStateChangeErc1155TransferData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': EvmAmountToJSON(value.amount),
        'contract': EvmAddressInfoToJSON(value.contract),
        'metadata': EvmNftMetadataToJSON(value.metadata),
        'tokenId': value.tokenId,
        'assetPrice': AssetPriceToJSON(value.assetPrice),
    };
}

