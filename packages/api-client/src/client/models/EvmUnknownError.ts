/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmUnknownError
 */
export interface EvmUnknownError {
    /**
     * 
     * @type {string}
     * @memberof EvmUnknownError
     */
    kind: EvmUnknownErrorKindEnum;
    /**
     * Human readable explanation of the error
     * @type {string}
     * @memberof EvmUnknownError
     */
    humanReadableError: string;
}


/**
 * @export
 */
export const EvmUnknownErrorKindEnum = {
    UnknownError: 'UNKNOWN_ERROR'
} as const;
export type EvmUnknownErrorKindEnum = typeof EvmUnknownErrorKindEnum[keyof typeof EvmUnknownErrorKindEnum];


/**
 * Check if a given object implements the EvmUnknownError interface.
 */
export function instanceOfEvmUnknownError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "humanReadableError" in value;

    return isInstance;
}

export function EvmUnknownErrorFromJSON(json: any): EvmUnknownError {
    return EvmUnknownErrorFromJSONTyped(json, false);
}

export function EvmUnknownErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmUnknownError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'humanReadableError': json['humanReadableError'],
    };
}

export function EvmUnknownErrorToJSON(value?: EvmUnknownError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'humanReadableError': value.humanReadableError,
    };
}

