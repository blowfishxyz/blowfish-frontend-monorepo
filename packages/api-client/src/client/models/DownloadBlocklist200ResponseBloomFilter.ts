/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DownloadBlocklist200ResponseBloomFilter
 */
export interface DownloadBlocklist200ResponseBloomFilter {
    /**
     * 
     * @type {string}
     * @memberof DownloadBlocklist200ResponseBloomFilter
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof DownloadBlocklist200ResponseBloomFilter
     */
    hash: string;
}

/**
 * Check if a given object implements the DownloadBlocklist200ResponseBloomFilter interface.
 */
export function instanceOfDownloadBlocklist200ResponseBloomFilter(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "hash" in value;

    return isInstance;
}

export function DownloadBlocklist200ResponseBloomFilterFromJSON(json: any): DownloadBlocklist200ResponseBloomFilter {
    return DownloadBlocklist200ResponseBloomFilterFromJSONTyped(json, false);
}

export function DownloadBlocklist200ResponseBloomFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadBlocklist200ResponseBloomFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'hash': json['hash'],
    };
}

export function DownloadBlocklist200ResponseBloomFilterToJSON(value?: DownloadBlocklist200ResponseBloomFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'hash': value.hash,
    };
}

