/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SolanaStateChangeSolTransferData } from './SolanaStateChangeSolTransferData';
import {
    SolanaStateChangeSolTransferDataFromJSON,
    SolanaStateChangeSolTransferDataFromJSONTyped,
    SolanaStateChangeSolTransferDataToJSON,
} from './SolanaStateChangeSolTransferData';

/**
 * Solana native token transfer
 * @export
 * @interface SolanaStateChangeSolTransfer
 */
export interface SolanaStateChangeSolTransfer {
    /**
     * What kind of state change this object is
     * @type {string}
     * @memberof SolanaStateChangeSolTransfer
     */
    kind: SolanaStateChangeSolTransferKindEnum;
    /**
     * 
     * @type {SolanaStateChangeSolTransferData}
     * @memberof SolanaStateChangeSolTransfer
     */
    data: SolanaStateChangeSolTransferData;
}


/**
 * @export
 */
export const SolanaStateChangeSolTransferKindEnum = {
    SolTransfer: 'SOL_TRANSFER'
} as const;
export type SolanaStateChangeSolTransferKindEnum = typeof SolanaStateChangeSolTransferKindEnum[keyof typeof SolanaStateChangeSolTransferKindEnum];


/**
 * Check if a given object implements the SolanaStateChangeSolTransfer interface.
 */
export function instanceOfSolanaStateChangeSolTransfer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function SolanaStateChangeSolTransferFromJSON(json: any): SolanaStateChangeSolTransfer {
    return SolanaStateChangeSolTransferFromJSONTyped(json, false);
}

export function SolanaStateChangeSolTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaStateChangeSolTransfer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'data': SolanaStateChangeSolTransferDataFromJSON(json['data']),
    };
}

export function SolanaStateChangeSolTransferToJSON(value?: SolanaStateChangeSolTransfer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': value.kind,
        'data': SolanaStateChangeSolTransferDataToJSON(value.data),
    };
}

