/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmTxData } from './EvmTxData';
import {
    EvmTxDataFromJSON,
    EvmTxDataFromJSONTyped,
    EvmTxDataToJSON,
} from './EvmTxData';
import type { RequestMetadata } from './RequestMetadata';
import {
    RequestMetadataFromJSON,
    RequestMetadataFromJSONTyped,
    RequestMetadataToJSON,
} from './RequestMetadata';

/**
 * 
 * @export
 * @interface ScanTransactionsEvmRequest
 */
export interface ScanTransactionsEvmRequest {
    /**
     * 
     * @type {Array<EvmTxData>}
     * @memberof ScanTransactionsEvmRequest
     */
    txObjects: Array<EvmTxData>;
    /**
     * 
     * @type {RequestMetadata}
     * @memberof ScanTransactionsEvmRequest
     */
    metadata: RequestMetadata;
    /**
     * A hex-representation of the user account who is being asked to sign the supplied transaction. In most cases this will be the same as the from property in the txObject
     * @type {string}
     * @memberof ScanTransactionsEvmRequest
     */
    userAccount: string;
}

/**
 * Check if a given object implements the ScanTransactionsEvmRequest interface.
 */
export function instanceOfScanTransactionsEvmRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "txObjects" in value;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "userAccount" in value;

    return isInstance;
}

export function ScanTransactionsEvmRequestFromJSON(json: any): ScanTransactionsEvmRequest {
    return ScanTransactionsEvmRequestFromJSONTyped(json, false);
}

export function ScanTransactionsEvmRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanTransactionsEvmRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'txObjects': ((json['txObjects'] as Array<any>).map(EvmTxDataFromJSON)),
        'metadata': RequestMetadataFromJSON(json['metadata']),
        'userAccount': json['userAccount'],
    };
}

export function ScanTransactionsEvmRequestToJSON(value?: ScanTransactionsEvmRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'txObjects': ((value.txObjects as Array<any>).map(EvmTxDataToJSON)),
        'metadata': RequestMetadataToJSON(value.metadata),
        'userAccount': value.userAccount,
    };
}

