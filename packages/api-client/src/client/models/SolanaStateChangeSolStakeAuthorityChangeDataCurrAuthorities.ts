/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Current authorities with control over the staking account
 * @export
 * @interface SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities
 */
export interface SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities {
    /**
     * Authority who can make staking changes
     * @type {string}
     * @memberof SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities
     */
    staker: string;
    /**
     * Authority who can withdraw the funds from the staking account
     * @type {string}
     * @memberof SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities
     */
    withdrawer: string;
}

/**
 * Check if a given object implements the SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities interface.
 */
export function instanceOfSolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "staker" in value;
    isInstance = isInstance && "withdrawer" in value;

    return isInstance;
}

export function SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthoritiesFromJSON(json: any): SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities {
    return SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthoritiesFromJSONTyped(json, false);
}

export function SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthoritiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'staker': json['staker'],
        'withdrawer': json['withdrawer'],
    };
}

export function SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthoritiesToJSON(value?: SolanaStateChangeSolStakeAuthorityChangeDataCurrAuthorities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'staker': value.staker,
        'withdrawer': value.withdrawer,
    };
}

