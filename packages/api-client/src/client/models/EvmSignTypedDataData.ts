/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmSignTypedDataDataDomain } from './EvmSignTypedDataDataDomain';
import {
    EvmSignTypedDataDataDomainFromJSON,
    EvmSignTypedDataDataDomainFromJSONTyped,
    EvmSignTypedDataDataDomainToJSON,
} from './EvmSignTypedDataDataDomain';
import type { EvmSignTypedDataDataTypes } from './EvmSignTypedDataDataTypes';
import {
    EvmSignTypedDataDataTypesFromJSON,
    EvmSignTypedDataDataTypesFromJSONTyped,
    EvmSignTypedDataDataTypesToJSON,
} from './EvmSignTypedDataDataTypes';

/**
 * 
 * @export
 * @interface EvmSignTypedDataData
 */
export interface EvmSignTypedDataData {
    /**
     * 
     * @type {EvmSignTypedDataDataTypes}
     * @memberof EvmSignTypedDataData
     */
    types?: EvmSignTypedDataDataTypes;
    /**
     * 
     * @type {string}
     * @memberof EvmSignTypedDataData
     */
    primaryType?: string;
    /**
     * 
     * @type {EvmSignTypedDataDataDomain}
     * @memberof EvmSignTypedDataData
     */
    domain?: EvmSignTypedDataDataDomain;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof EvmSignTypedDataData
     */
    message?: { [key: string]: any; };
}

/**
 * Check if a given object implements the EvmSignTypedDataData interface.
 */
export function instanceOfEvmSignTypedDataData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EvmSignTypedDataDataFromJSON(json: any): EvmSignTypedDataData {
    return EvmSignTypedDataDataFromJSONTyped(json, false);
}

export function EvmSignTypedDataDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmSignTypedDataData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'types': !exists(json, 'types') ? undefined : EvmSignTypedDataDataTypesFromJSON(json['types']),
        'primaryType': !exists(json, 'primaryType') ? undefined : json['primaryType'],
        'domain': !exists(json, 'domain') ? undefined : EvmSignTypedDataDataDomainFromJSON(json['domain']),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function EvmSignTypedDataDataToJSON(value?: EvmSignTypedDataData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'types': EvmSignTypedDataDataTypesToJSON(value.types),
        'primaryType': value.primaryType,
        'domain': EvmSignTypedDataDataDomainToJSON(value.domain),
        'message': value.message,
    };
}

