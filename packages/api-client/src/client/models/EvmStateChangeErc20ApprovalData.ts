/* tslint:disable */
/* eslint-disable */
/**
 * API reference
 * The Blowfish API reference specification
 *
 * The version of the OpenAPI document: 2022-06-01
 * Contact: contact@blowfish.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmAddressInfo } from './EvmAddressInfo';
import {
    EvmAddressInfoFromJSON,
    EvmAddressInfoFromJSONTyped,
    EvmAddressInfoToJSON,
} from './EvmAddressInfo';
import type { EvmAmount } from './EvmAmount';
import {
    EvmAmountFromJSON,
    EvmAmountFromJSONTyped,
    EvmAmountToJSON,
} from './EvmAmount';
import type { EvmAsset } from './EvmAsset';
import {
    EvmAssetFromJSON,
    EvmAssetFromJSONTyped,
    EvmAssetToJSON,
} from './EvmAsset';

/**
 * Data associated with the state change
 * @export
 * @interface EvmStateChangeErc20ApprovalData
 */
export interface EvmStateChangeErc20ApprovalData {
    /**
     * 
     * @type {EvmAddressInfo}
     * @memberof EvmStateChangeErc20ApprovalData
     */
    contract: EvmAddressInfo;
    /**
     * 
     * @type {EvmAddressInfo}
     * @memberof EvmStateChangeErc20ApprovalData
     */
    owner: EvmAddressInfo;
    /**
     * 
     * @type {EvmAddressInfo}
     * @memberof EvmStateChangeErc20ApprovalData
     */
    spender: EvmAddressInfo;
    /**
     * 
     * @type {EvmAmount}
     * @memberof EvmStateChangeErc20ApprovalData
     */
    amount: EvmAmount;
    /**
     * 
     * @type {EvmAsset}
     * @memberof EvmStateChangeErc20ApprovalData
     */
    asset: EvmAsset;
}

/**
 * Check if a given object implements the EvmStateChangeErc20ApprovalData interface.
 */
export function instanceOfEvmStateChangeErc20ApprovalData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contract" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "spender" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "asset" in value;

    return isInstance;
}

export function EvmStateChangeErc20ApprovalDataFromJSON(json: any): EvmStateChangeErc20ApprovalData {
    return EvmStateChangeErc20ApprovalDataFromJSONTyped(json, false);
}

export function EvmStateChangeErc20ApprovalDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmStateChangeErc20ApprovalData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contract': EvmAddressInfoFromJSON(json['contract']),
        'owner': EvmAddressInfoFromJSON(json['owner']),
        'spender': EvmAddressInfoFromJSON(json['spender']),
        'amount': EvmAmountFromJSON(json['amount']),
        'asset': EvmAssetFromJSON(json['asset']),
    };
}

export function EvmStateChangeErc20ApprovalDataToJSON(value?: EvmStateChangeErc20ApprovalData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contract': EvmAddressInfoToJSON(value.contract),
        'owner': EvmAddressInfoToJSON(value.owner),
        'spender': EvmAddressInfoToJSON(value.spender),
        'amount': EvmAmountToJSON(value.amount),
        'asset': EvmAssetToJSON(value.asset),
    };
}

