// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { EvmAddressInfo } from "./EvmAddressInfo";
import type { EvmAmountDiff } from "./EvmAmountDiff";
import type { EvmTokenMetadata } from "./EvmTokenMetadata";
import type { Price } from "./Price";

export type EvmStateChange =
  | {
      kind: "ERC20_TRANSFER";
      data: {
        symbol: string;
        name: string;
        decimals: number;
        amount: EvmAmountDiff;
        contract: EvmAddressInfo;
        assetPrice: Price | null;
      };
    }
  | {
      kind: "ERC721_TRANSFER";
      data: {
        symbol: string;
        name: string;
        tokenId: string | null;
        amount: EvmAmountDiff;
        contract: EvmAddressInfo;
        metadata: EvmTokenMetadata;
      };
    }
  | {
      kind: "ERC1155_TRANSFER";
      data: {
        amount: EvmAmountDiff;
        contract: EvmAddressInfo;
        tokenId: string;
        metadata: EvmTokenMetadata;
      };
    }
  | {
      kind: "ERC721_APPROVAL_FOR_ALL";
      data: {
        symbol: string;
        name: string;
        spender: EvmAddressInfo;
        contract: EvmAddressInfo;
        owner: EvmAddressInfo;
        amount: EvmAmountDiff;
      };
    }
  | {
      kind: "ERC1155_APPROVAL_FOR_ALL";
      data: {
        spender: EvmAddressInfo;
        contract: EvmAddressInfo;
        owner: EvmAddressInfo;
        amount: EvmAmountDiff;
      };
    }
  | {
      kind: "ERC721_APPROVAL";
      data: {
        symbol: string;
        name: string;
        spender: EvmAddressInfo;
        contract: EvmAddressInfo;
        owner: EvmAddressInfo;
        tokenId: string;
        amount: EvmAmountDiff;
        metadata: EvmTokenMetadata;
      };
    }
  | {
      kind: "NATIVE_ASSET_TRANSFER";
      data: {
        symbol: string;
        name: string;
        decimals: number;
        amount: EvmAmountDiff;
        contract: EvmAddressInfo;
      };
    }
  | {
      kind: "ERC20_APPROVAL";
      data: {
        name: string;
        symbol: string;
        decimals: number;
        spender: EvmAddressInfo;
        amount: EvmAmountDiff;
        contract: EvmAddressInfo;
        owner: EvmAddressInfo;
        assetPrice: Price | null;
      };
    };
